(defconstant ALPHABET (make-array '(26) :initial-contents '(#\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X #\Y #\Z)))
(defconstant ALPHABET_LOWER (make-array '(26) :initial-contents '(#\a #\b #\c #\d #\e #\f #\g #\h #\i #\j #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v #\w #\x #\y #\z)))
(defconstant ALPHA_LEN (length ALPHABET))

(defun is-lower(c)
  (and (char>= c #\a) (char<= c #\z))
  )

(defun get-index (c)
  (loop for i from 0 to (- ALPHA_LEN 1)
        do (if (char= c (aref ALPHABET i)) (return-from get-index i))
        )
  (- 1)
  )

(defun to-lower(c)
  (let ((index (get-index c)))
    (return-from to-lower (aref ALPHABET_LOWER index))
    )
  )

(defun get-vigenere-encrypted-char (c k)
  (let ((index (get-index c)) (shift (get-index k)))
    (if (/= index (- 1)) 
      (return-from get-vigenere-encrypted-char (aref ALPHABET (mod (+ index shift) ALPHA_LEN)))
      (return-from get-vigenere-encrypted-char c)
      )
    )
  )

(defun get-vigenere-decrypted-char (c k)
  (let ((index (get-index c)) (shift (get-index k)))
    (if (/= index (- 1)) 
      (return-from get-vigenere-decrypted-char (aref ALPHABET (mod (- index shift) ALPHA_LEN)))
      (return-from get-vigenere-decrypted-char c)
      )
    )
  )

(defun vigenere-encrypt (msg key)
  (let ((encrypted_msg (string-upcase msg)) (key (string-upcase key)))
    (loop for i from 0 to (- (length encrypted_msg) 1)
          do (setf (aref encrypted_msg i) (get-vigenere-encrypted-char (char encrypted_msg i) (char key (mod i (length key)))))
          do (if (is-lower (char msg i)) (setf (aref encrypted_msg i) (to-lower (char encrypted_msg i)))) 
          )
    (return-from vigenere-encrypt encrypted_msg)
    )
  )

(defun vigenere-decrypt (msg key)
  (let ((decrypted_msg (string-upcase msg)) (key (string-upcase key)))
    (loop for i from 0 to (- (length decrypted_msg) 1)
          do (setf (aref decrypted_msg i) (get-vigenere-decrypted-char (char decrypted_msg i) (char key (mod i (length key)))))
          do (if (is-lower (char msg i)) (setf (aref decrypted_msg i) (to-lower (char decrypted_msg i))))
          )
    (return-from vigenere-decrypt decrypted_msg)
    )
  )

;(write-line (vigenere-encrypt "Hello, World!" "ilikepotatoes"))
;(write-line (vigenere-decrypt "Pptvs, Pokzh!" "ilikepotatoes"))
